#ifndef make_testcall_script_hsp_included
#define make_testcall_script_hsp_included

#include "kernel32.as"

#module

/*
一時ディレクトリ内の構成を守るためのフォルダを追加で作成する
例えば、#include "path/to/module.as"と記述されていた場合、"path/to"フォルダを作成する
*/
#deffunc local make_folder_in_path str path, local parent
    parent = getpath(path, 32)
    if parent == "" : return
    make_folder_in_path parent
    mkdir parent
    return

/*
テストスクリプト内で呼び出されたスクリプトファイルを一時フォルダにコピーする
*/
#deffunc local copy_included_test_file_to_temp_dir str file_name, int init, local test_script_buf, local file_line_num, local l, local addinst, local index, local copy_file_name
    notesel test_script_buf
    noteload file_name
    file_line_num = noteinfo(0)
    repeat file_line_num
        noteget l, cnt
        if init {
            addinst_buf = "#include #addition #uselib #pack #epack"
            split addinst_buf, " ", addinst_list
        }
        repeat length(addinst_list)
            index = instr(l, 0, addinst_list(cnt))
            if index != -1 {
                // includeされるファイル名を抽出
                addinst = addinst_list(cnt)
                index += strlen(addinst)
                getstr copy_file_name, l, index, '"', 1024
                index += strsize
                getstr copy_file_name, l, index, '"', 1024
                // コピーするファイル名がパス表現のとき、再現フォルダを作成
                if getpath(copy_file_name, 32) != "" {
                    make_folder_in_path copy_file_name
                }
                // カレントディレクトリ内に存在しないとき無視
                exist copy_file_name
                if strsize == -1 : break
                // commonフォルダに存在する既存スクリプトの場合無視
                exist dirinfo(1) + "\\common\\" + copy_file_name
                if strsize != -1 : break
                // 既に一時フォルダに存在するとき無視
                exist temp_test_env_dir + "\\" + copy_file_name
                if strsize != -1 : break
                // コピーした後に更にincludeされるスクリプト内でincludeされるスクリプトを探す
                bcopy copy_file_name, temp_test_env_dir + "\\" + copy_file_name
                mes copy_file_name + " copied"
                copy_included_test_file_to_temp_dir copy_file_name, 0
                break
            }
        loop
    loop
    return

/*
テストスクリプトを生成する
引数
    testfile_name: スクリプト内でincludeされるテストスクリプト名
    testlabel_name: スクリプト内でincludeされるテストサブルーチンラベル名
返り値
    str: テストスクリプトが保存されたファイルへのパス
 */
#defcfunc make_temp_test str testfile_name, str testlabel_name
    temp_test_name = "__testtmp.hsp"
    temp_test_env_dir = "__tmpenv"
    generated_code_buf = "goto *__start\n"
    generated_code_buf += "#include \"test.as\"\n"
    generated_code_buf += "#include \"" + testfile_name + "\"\n"
    generated_code_buf += "*__start\n"
    generated_code_buf += "gosub *__testinit\n"
    generated_code_buf += "gosub " + testlabel_name + "\n"
    generated_code_buf += "mes get_pass_result_format()\n"
    generated_code_buf += "end 1"
    notesel generated_code_buf
    notesave temp_test_name
    mkdir temp_test_env_dir
    bcopy temp_test_name, temp_test_env_dir + "\\" + temp_test_name
    copy_included_test_file_to_temp_dir temp_test_name, 1
    delete temp_test_name
    chdir temp_test_env_dir
    return temp_test_name

/*
テストスクリプトおよびaxファイルを削除する
 */
#deffunc delete_temp_test
    dirlist tmp_files, "*.*",
    file_num = stat
    chdir ".."
    notesel tmp_files
    repeat file_num
        noteget delete_file_name, cnt
        delete temp_test_env_dir + "\\" + delete_file_name
    loop
    RemoveDirectory temp_test_env_dir
    return

#global

#endif
